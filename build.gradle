plugins {
    id 'checkstyle'
    id 'application'
    id 'java'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.24.2'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

mainClassName = 'edu.wpi.surflab.CurvatureApp'
String javaVersion = "14"

//TestFX doesn't play nice with macOS
String osName = System.getProperty("os.name").toLowerCase();
if (osName.contains("mac")) {
    project.setProperty("headless", "true")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.controlsfx:controlsfx:8.40.16',
            'com.panemu:tiwulfx:2.0',
            'junit:junit:4.12',
            'org.jetbrains:annotations:15.0',
    )

    compileOnly(
            'org.projectlombok:lombok:1.18.8',
    )

    annotationProcessor(
            'org.projectlombok:lombok:1.18.8'
    )

    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.5.1',
            'org.testfx:testfx-junit5:4.0.16-alpha',
    )
    testRuntimeOnly(
            "org.testfx:openjfx-monocle:8u76-b04",
    )
}

java {
    sourceCompatibility = JavaVersion.valueOf("VERSION_" + javaVersion)
    targetCompatibility = JavaVersion.valueOf("VERSION_" + javaVersion)
}

javafx {
    version = javaVersion
    modules = [
        'javafx.fxml',
        'javafx.base',
        'javafx.controls',
    ]
}

test {
    useJUnitPlatform()
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            excludes = [
                    'edu.wpi.surflab.CurvatureApp'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.surflab.CurvatureApp'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.surflab.CurvatureApp'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport

spotless {
    java {
        googleJavaFormat()
    }
}
